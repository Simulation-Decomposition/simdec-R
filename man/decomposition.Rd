% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Decomposition.R
\name{decomposition}
\alias{decomposition}
\title{Decomposition -}
\usage{
decomposition(
  output,
  inputs,
  SI,
  dec_limit,
  manual_vars = NULL,
  manual_states = NULL,
  manual_thresholds = NULL,
  threshold_type = 2,
  var_names
)
}
\arguments{
\item{output}{- a vector of the target variable (Y)}

\item{inputs}{- a matrix of input variables}

\item{SI}{- sensitivity indices}

\item{dec_limit}{- threshold of cumulative significance for selection
of input variables for decomposition}

\item{manual_vars}{- (optional) for custom decomposition specify the order
of variables for decomposition, use zero to exclude.
For example, if 4 input variables, third and second
are desired for decomposition, then
manual_vars <- c(0 2 1 0).}

\item{manual_states}{- (optional) the number of states for each input
variable, i.e. c(0 3 2 0)}

\item{manual_thresholds}{- manual_thresholds - [optional] maximums (numeric thresholds)
of every state, leave the rest as NA, e.g.
matrix(NA, 3, -1, NA,
       NA, 5,  0, NA,
       NA, 7, NA, NA, byrow = TRUE)}

\item{threshold_type}{- 1 for 'precentile-based' (same amount of observations in each state),
2 for 'median-based' (equaly-spaced ranges of states)}

\item{var_names}{- names of input variables}
}
\value{
scenarios         - an array of the same size as Y with scenario indices
                            for every simulation run.

scen_legend       - a scenario table that shows which states of which
                            variables compose different sceanrios

thresholds_out    - thresholds of states of input variables

var_names_dec     - a cell array with sorted input variables' names
}
\description{
This functions creates the scenarios and maps them onto output values.
}
\examples{
df <- data.frame(Y  <- c(167, 82, 75, 134, 186, 51, 17, 167, 86, 198),
                 X1 <- c(10, 20, 30, 15, 8, 40, 60, 10, 17, 4),
                 X2 <- c(4,9,8,7,6,17,6,7,8,3))
output <- df[,1]
inputs <- df[,2:3]
S      <- significance(output, inputs)
SI     <- s[[2]]
DE <- decomposition(output, inputs, SI,
                    dec_limit = 0.8,
                    manual_vars = NULL,
                    manual_states = NULL,
                    manual_thresholds = NULL,
                    threshold_type = 2,
                    var_names = colnames(inputs))
}
